$subjectColor: #02b2b5; // 主题色
$titleColor: #333; // 标题色
$contentColor: #666; // 正文色
$auxiliaryColor: #999; // 辅助色
$nextAuxiliaryColor: #b4b4b4; // 其次辅助色
// 背景图片地址和大小
@mixin back($url, $size: 100% 100%) {
	background-image: url($url);
	background-repeat: no-repeat;
	background-size: $size;
}

@mixin box ($sing: border-box) {
	-webkit-box-sizing: $sing;
	-moz-box-sizing: $sing;
	box-sizing: $sing;
}

@mixin radius($radius: 10px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

//定位全屏
@mixin allcover{
	position: absolute;
	top: 0;
	right: 0;
}

//定位上下左右居中
@mixin center {
	position: absolute;
	top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

//定位默认左上
@mixin lt ($left: 0,$top: 0,$position: absolute) {
	position: $position;
	left: $left;
	top: $top;
}

//定位默认右上
@mixin rt ($right: 0,$top: 0,$position: absolute) {
	position: $position;
	right: $right;
	top: $top;
}

//定位默认左下
@mixin lb ($left: 0,$bottom: 0,$position: absolute) {
	position: $position;
	left: $left;
	bottom: $bottom;
}

//定位默认右下
@mixin rb ($right: 0,$bottom: 0,$position: absolute) {
	position: $position;
	right: $right;
	bottom: $bottom;
}

//定位上下居中
@mixin ct {
	position: absolute;
	top: 50%;
    transform: translateY(-50%);
}

//定位左右居中
@mixin cl {
	position: absolute;
	left: 50%;
    transform: translateX(-50%);
}

//宽高
@mixin wh($width: 100%, $height: 100%){
	width: $width;
	height: $height;
}

//字体大小、行高、颜色、字体 '宋体': SimSun;
@mixin font($size, $line-height, $color) {
	font-size: $size;
	line-height: $line-height;
	color: $color;
}

//flex 布局和 子元素 对齐方式
@mixin flex($type: space-between){
	display: flex;
	justify-content: $type;
}

// 溢出隐藏 ...
@mixin line($num: 1) {
	overflow: hidden;
	text-overflow: ellipsis;
	@if ($num == 1) {
		white-space: nowrap;
	}
	@else {
		display: -webkit-box;
		-webkit-line-clamp: $num;
		-webkit-box-orient: vertical;
	}
}

// 默认阴影
@mixin shadow($radius: 10px, $shadow: 0 4px 20px rgba(0, 0, 0, 0.1)){
	box-shadow: $shadow;
	@include radius($radius);
}

// px -> rem
@function rem($num) {
	@return $num / 75;
}
